isEmpty(DTK_MODULE_NAME): error(set DTK_MODULE_NAME first)
!contains(DTK_MODULE_NAME, ^dtk[a-z0-9._]+$): error(The format of the value of DTK_MODULE_NAME is incorrect. eg: dtk[a-z0-9._]+)
!contains(DTK_MODULE_NAME, ^dtkcore[a-z0-9._]*$):!contains(QT, ^dtkcore[a-z0-9._]*$): error(QT += dtkcore first)

#将首字母改为大写
defineReplace(capitalizingString) {
    RAW=$$1
    FIRST = $$upper($$section(RAW, "", 1, 1))
    OTHERS = $$section(RAW, "", 2, -1)
    return($$FIRST$$OTHERS)
}

defineTest(checkDtkVersion) {
    isEmpty(VERSION) {
        # TODO: failed in windows
        isEmpty(VERSION): VERSION = $${QT.dtkcommon.VERSION}
        isEmpty(VERSION): VERSION = $$DTK_VERSION
        isEmpty(VERSION): return(false)
        VERSION = $$replace(VERSION, [^0-9.],)
    }

    export(VERSION)
    return(true)
}

defineReplace(getQtMacroFromQMake) {
    MACRO = $$1
    var = $${system($${QMAKE_QMAKE} -query $$MACRO)}

    return ($$var)
}

!checkDtkVersion():error("check dtk version failed")

message("build dtk with version $$VERSION")
ver_list = $$split(VERSION, .)

isEmpty(VER_MAJ) {
    VER_MAJ = $$first(ver_list)
}
isEmpty(VER_MIN) {
    VER_MIN = $$member(ver_list, 1, 1)
    isEmpty(VER_MIN): VER_MIN = 0
    !isEmpty(VER_MIN): VER_MIN = $$format_number($$VER_MIN, ibase=10)
}
isEmpty(VER_PAT) {
    VER_PAT = $$member(ver_list, 2, 2)
    isEmpty(VER_PAT): VER_PAT = 0
    !isEmpty(VER_PAT): VER_PAT = $$format_number($$VER_PAT, ibase=10)
}
isEmpty(VER_BUI) {
    VER_BUI = $$member(ver_list, 3, 3)
    isEmpty(VER_BUI): VER_BUI = 0
    # fix VER_BUI=009, invalid digit "9" in octal constant error
    !isEmpty(VER_BUI): VER_BUI = $$format_number($$VER_BUI, ibase=10)
}

isEmpty(PREFIX){
    PREFIX = $${getQtMacroFromQMake(QT_HOST_PREFIX)}
}

isEmpty(LIB_INSTALL_DIR) {
    LIB_INSTALL_DIR=$${QT.dtkcommon.libs}
}

LIB_VERSION_NAME = libdtk-$${VER_MAJ}.$${VER_MIN}.$${VER_PAT}
message("library version name $$LIB_VERSION_NAME, VER_BUI is $$VER_BUI")

MODULE_NAME = $$upper($$member($$list($$split(DTK_MODULE_NAME,)), 3, 3))$$join($$list($$member($$list($$split(DTK_MODULE_NAME,)), 4, -1)))
DMODULE_NAME = D$${MODULE_NAME}

isEmpty(TOOL_INSTALL_DIR) {
    TOOL_INSTALL_DIR=$$LIB_INSTALL_DIR/$$LIB_VERSION_NAME/$$DMODULE_NAME/bin
}

isEmpty(INCLUDE_INSTALL_DIR) {
    INCLUDE_INSTALL_DIR = $$PREFIX/include/$$LIB_VERSION_NAME/$$DMODULE_NAME
}
